#!/bin/bash
### BEGIN INIT INFO
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: bootmail
# Description:       bootmail, Email alert of system boot, reboot, and halt.
### END INIT INFO
export PATH="$PATH:/bin:/sbin:/usr/bin:/usr/sbin"
export option="${1}"
if [ ! -z "${2}" ]; then
	export mailto="${2}"
elif [ -z "${BOOTMAIL}" ]; then
	export mailto="webmaster"
else
	export mailto="${BOOTMAIL}"
fi
export time="$(date +'%F %T')"
if [ ! -z "$(id -n -u)" ]; then
	export from="$(id -n -u)@$(hostname -f)"
else
	export from="root@$(hostname -f)"
fi
export runlevel="$(runlevel)"
export runlevel="${runlevel:1}"
export logfile="/var/log/bootmail.log"
func_log(){
	if [ ${1} = 0 ]; then
		printf "[ OK ] ${time} ${runlevel} ${option} to ${mailto}\n" >> ${logfile}
	else
		printf "[FAIL] ${time} ${runlevel} ${option} to ${mailto}\n" >> ${logfile}
	fi
}
func_help(){
	echo "bootmail, Send email for alert system maintenance informations."
	echo "Usage: bootmail {start|stop|!restart} [email address]"
	echo ""
	echo "Argument:"
	echo "        start          - system boot up alert."
	echo "        stop           - system halt alert."
	echo "        restart        - system reboot alert."
	echo ""
	echo "Options:"
	echo "   -h,  --help         - print this help."
	echo ""
	echo "Example:"
	echo "   bootmail start    - Boot up alert to ${mailto}."
	echo "   bootmail stop     - Halt alert to ${mailto}."
	echo "   bootmail start admin@example.com"
	echo "                       - Boot up alert to admin@example.com."
	echo ""
	echo "Current default email address is: ${mailto}"
	echo "You can export 'BOOTMAIL' to change default email address."
	return 0
}
func_start(){
	local subject="Broadcast message from ${from}"
	local attachment="sed 's/\^\[/\o33/g;s/\[1G\[/\[27G\[/' /var/log/boot"
	{	
		printf "Issued Date: ${time}\n"
		printf "bootmail:\n\n"
		printf "The system has been completely booted up.\n\n"
		printf "Attachment: /var/log/boot (bootlogd)\n"
	} | sudo mutt -s "${subject}" -a "/var/log/boot" -- "${mailto}"
	if [ ${?} -eq 0 ]; then
		func_log 0
		return 0
	else
		echo "bootmail: An error occurred whule sending email to ${mailto}."
		func_log 1
		return 1
	fi
}
func_stop(){
	local subject="Broadcast message from ${from}"
	{
		printf "Issued Date: ${time}\n"
		printf "bootmail:\n\n"
		printf "The system is going down for system halt NOW!\n\n"
	} | sudo mutt -s "${subject}" "${mailto}"
	if [ ${?} -eq 0 ]; then
		func_log 0
		return 0
	else
		echo "bootmail: An error occurred whule sending email to ${mailto}."
		func_log 1
		return 1
	fi
}
func_restart(){
	local subject="Broadcast message from ${from}"
	{
		printf "Issued Date: ${time}\n"
		printf "bootmail:\n\n"
		printf "The system is going down for system reboot NOW!\n\n"
	} | sudo mutt -s "${subject}" "${mailto}"
	if [ ${?} -eq 0 ]; then
		func_log 0
		return 0
	else
		echo "bootmail: An error occurred whule sending email to ${mailto}."
		func_log 1
		return 1
	fi
}
case "${option}" in
	start)
		func_start
	;;
	stop)
		if [ ${runlevel} -eq 6 ]; then
			export option="restart"
			func_restart
		else
			func_stop
		fi
	;;
	restart)
		func_restart
	;;
	-h|-\?|--help)
		func_help
	;;
	*)
		if [ ! -z "${option}" ]; then
			echo "Invalid option: ${option}"
		fi
		echo "Usage: bootmail {start|stop|restart} [email address]" >&2
		echo "" >&2
		echo "Try 'bootmail --help' for more options." >&2
		exit 2
	;;
esac
export errorlevel="${?}"
exit ${errorlevel}
