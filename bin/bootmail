#!/bin/bash
# /usr/bin/bootmail: Email alert when system boot, reboot, and halt.
### BEGIN INIT INFO
# Provides:          bootmail
# Required-Start:    $all
# Required-Stop:     $all
# Default-Start:     2
# Default-Stop:      0 1 6
### END INIT INFO
PATH="/sbin:/bin:/usr/sbin:/usr/bin"

MAILTO="root"
SENDER="$(id -n -u)@$(hostname -f)"

LOGDIR="/var/log/bootmail"
LOGFILE="$LOGDIR/bootmail.log"

if test -f /etc/default/ssh; then
    . /etc/default/ssh
fi
if [ ! -z "$2" ]; then
	MAILTO="$2"
elif [ -z "$MAILTO" ]; then
	MAILTO="root"
else
	MAILTO="$MAILTO"
fi
TIME="$(date +'%F %T')"
if [ ! -z "$(id -n -u)" ]; then
	SENDER="$(id -n -u)@$(hostname -f)"
else
	SENDER="root@$(hostname -f)"
fi
RUNLEVEL="$(runlevel)"
RUNLEVEL="${RUNLEVEL:1}"

func_log(){
	if [ ${1} = 0 ]; then
		printf "[ OK ] $TIME $RUNLEVEL $OPTYPE to $MAILTO\n" >> $LOGFILE
	else
		printf "[FAIL] $TIME $RUNLEVEL $OPTYPE to $MAILTO\n" >> $LOGFILE
	fi
}
func_help(){
	echo "bootmail, Send email for alert system maintenance informations."
	echo "Usage: $0 {start|stop|restart} [email address]"
	echo ""
	echo "Arguments:"
	echo "        start          - system boot up alert."
	echo "        stop           - system halt alert."
	echo "        restart        - system reboot alert."
	echo ""
	echo "Options:"
	echo "   -h,  --help         - print this help."
	echo ""
	echo "Example:"
	echo "   $0 start    - Boot up alert."
	echo "   $0 stop     - Halt alert."
	echo "   $0 start admin@example.com"
	echo "                       - Boot up alert to admin@example.com."
	echo ""
	echo "Current receive email address is: $MAILTO"
	echo "You can add or edit to '/etc/default/bootmail'."
	return 0
}
body_boot(){
	local SUBJECT="Broadcast message from $SENDER"
	#local SED="sed 's/\^\[/\o33/g;s/\[1G\[/\[27G\[/' /var/log/boot"
	{	
		printf "Issued Date: $TIME\n"
		printf "bootmail:\n\n"
		printf "The system has been completely booted up.\n\n"
		printf "Attachment: /var/log/boot (bootlogd)\n"
	} | sudo mutt -s "$SUBJECT" -a "/var/log/boot" -- "$MAILTO"
	if [ $? -eq 0 ]; then
		func_log 0
		return 0
	else
		echo "bootmail: An error occurred whule sending email to $MAILTO."
		func_log 1
		return 1
	fi
}
body_halt(){
	local SUBJECT="Broadcast message from $SENDER"
	{
		printf "Issued Date: $TIME\n"
		printf "bootmail:\n\n"
		printf "The system is going down for system halt NOW!\n\n"
	} | sudo mutt -s "$SUBJECT" "$MAILTO"
	if [ $? -eq 0 ]; then
		func_log 0
		return 0
	else
		echo "bootmail: An error occurred while sending email to $MAILTO."
		func_log 1
		return 1
	fi
}
body_reboot(){
	local SUBJECT="Broadcast message from $SENDER"
	{
		printf "Issued Date: $TIME\n"
		printf "bootmail:\n\n"
		printf "The system is going down for system reboot NOW!\n\n"
	} | sudo mutt -s "$SUBJECT" "$MAILTO"
	if [ $? -eq 0 ]; then
		func_log 0
		return 0
	else
		echo "bootmail: An error occurred whule sending email to $MAILTO."
		func_log 1
		return 1
	fi
}
case "$1" in
	-h|-\?|--help)
		do_help
	;;
	-n|--dry-run)
		do_dryrun
	;;
	restart|reload|force-reload)
        	echo "Error: argument '$1' not supported" >&2
        	exit 3
        	;;
	start)
		OPTYPE="boot"
		body_boot
	;;
	stop)
		if [ $RUNLEVEL -eq 6 ]; then
			OPTYPE="reboot"
			body_reboot
		else
			OPTYPE="halt"
			body_halt
		fi
	;;
	*)
		if [ ! -z "$1" ]; then
			echo "Invalid option: $1"
		fi
		echo "Usage: $0 {start|stop} [email address]" >&2
		echo "" >&2
		echo "Try '$0 --help' for more options." >&2
		exit 3
	;;
esac
export ERRORLEVEL="$?"
exit $ERRORLEVEL
